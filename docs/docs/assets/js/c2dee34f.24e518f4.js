"use strict";(self.webpackChunkmodlib_docs=self.webpackChunkmodlib_docs||[]).push([[467],{8406:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"examples/tracker","title":"Tracker","description":"An implementation of ByteTrack (github) in the Application Module Library.","source":"@site/docs/examples/tracker.md","sourceDirName":"examples","slug":"/examples/tracker","permalink":"/docs/examples/tracker","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1732530754000,"sidebarPosition":0,"frontMatter":{"title":"Tracker","sidebar_position":0},"sidebar":"tutorialSidebar","previous":{"title":"Application Modules","permalink":"/docs/category/application-modules"},"next":{"title":"Area","permalink":"/docs/examples/area"}}');var a=n(4848),o=n(8453);const i={title:"Tracker",sidebar_position:0},s="ByteTrack",c={},l=[];function d(e){const t={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"bytetrack",children:"ByteTrack"})}),"\n",(0,a.jsxs)(t.p,{children:["An implementation of ByteTrack (",(0,a.jsx)(t.a,{href:"https://github.com/ifzhang/ByteTrack",children:"github"}),") in the Application Module Library."]}),"\n",(0,a.jsx)(t.p,{children:"ByteTrack provides a state of the art method for multi-object tracking by associating all detection boxes, including low-confidence ones. Unlike traditional methods that discard uncertain detections, ByteTrack recovers true objects and ensures continuous tracking, even in challenging conditions like occlusion or partial visibility."}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.a,{href:"../api-reference/apps/tracker/#bytetracker",children:"BYTETracker"})," offers a simple, effective, and robust solution for real-world tracking needs. Below a full example on how to use the BYTETracker in the Application Module Library."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",metastring:'title="tracker.py"',children:'from modlib.apps import Annotator, BYTETracker\nfrom modlib.devices import AiCamera\nfrom modlib.models.zoo import SSDMobileNetV2FPNLite320x320\n\nclass BYTETrackerArgs:\n    track_thresh: float = 0.25\n    track_buffer: int = 30\n    match_thresh: float = 0.8\n    aspect_ratio_thresh: float = 3.0\n    min_box_area: float = 1.0\n    mot20: bool = False\n\ndevice = AiCamera()\nmodel = SSDMobileNetV2FPNLite320x320()\ndevice.deploy(model)\n\ntracker = BYTETracker(BYTETrackerArgs())\nannotator = Annotator(thickness=1, text_thickness=1, text_scale=0.4)\n\nwith device as stream:\n    for frame in stream:\n        detections = frame.detections[frame.detections.confidence > 0.55]\n        detections = detections[detections.class_id == 0]  # Person\n\n        detections = tracker.update(frame, detections)\n\n        labels = [f"#{t} {model.labels[c]}: {s:0.2f}" for _, s, c, t in detections]\n        annotator.annotate_boxes(frame, detections, labels=labels)\n\n        frame.display()\n'})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var r=n(6540);const a={},o=r.createContext(a);function i(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);